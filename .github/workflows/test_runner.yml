name: Run Postman Collections and Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      collections:
        description: 'Comma-separated Postman collections to run'
        required: true
        default: login_tests,api_tests

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      collections: ${{ steps.set-matrix.outputs.collections }}
      timestamp: ${{ steps.set-time.outputs.timestamp }}
    steps:
      - name: Set Matrix Collections
        id: set-matrix
        run: |
          collections_json=$(jq -nc --arg cols "${{ github.event.inputs.collections }}" '$cols | split(",")')
          echo "collections=$collections_json" >> $GITHUB_OUTPUT

      - name: Set Timestamp
        id: set-time
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_OUTPUT

  run-tests:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        collection: ${{ fromJson(needs.prepare.outputs.collections) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Postman Collection
        run: |
          mkdir -p results/${{ matrix.collection }}
          newman run "collections/${{ matrix.collection }}.json" \
            -r cli,htmlextra \
            --reporter-htmlextra-export "results/${{ matrix.collection }}/index.html" --suppress-exit-code

      - name: Upload Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.collection }}-report
          path: results/${{ matrix.collection }}

  deploy:
    needs: [run-tests, prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Reports
        uses: actions/download-artifact@v4
        with:
          path: reports

      - name: Checkout gh-pages Branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git clone --depth=1 --branch=gh-pages https://github.com/${{ github.repository }} gh-pages

      - name: Copy Reports to Timestamped Folder
        run: |
          ts=${{ needs.prepare.outputs.timestamp }}
          mkdir -p gh-pages/$ts
          cp -r reports/* gh-pages/$ts/

      - name: Generate index.html
        run: |
          cd gh-pages
          echo '<!DOCTYPE html><html><head><meta charset="UTF-8"><title>All Test Runs</title>
          <style>
          body { font-family: sans-serif; padding: 2rem; }
          h1 { color: #333; }
          ul { line-height: 1.6; }
          a { color: #2563eb; text-decoration: none; }
          </style>
          </head><body><h1>Postman Test Reports</h1><ul>' > index.html

          for run in $(ls -d 20*/ 2>/dev/null); do
            echo "<li><strong>$run</strong><ul>" >> index.html
            for report in $(ls "$run"); do
              echo "<li><a href=\"$run/$report/index.html\">$report</a></li>" >> index.html
            done
            echo "</ul></li>" >> index.html
          done

          echo '</ul></body></html>' >> index.html

      - name: Commit and Push
        run: |
          cd gh-pages
          git add .
          git commit -m "Add reports for ${{ needs.prepare.outputs.timestamp }}" || echo "No changes to commit"
          git push origin gh-pages
