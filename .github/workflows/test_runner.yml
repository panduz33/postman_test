name: Run Multiple Postman Tests Manual Input File

on:
  workflow_dispatch:
    inputs:
      collections:
        description: 'Select Postman collections to run (comma-separated)'
        required: true
        default: login_tests,api_tests

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      collections: ${{ steps.set-matrix.outputs.collections }}
    steps:
      - name: Prepare Matrix
        id: set-matrix
        run: |
          echo "Input Collections: ${{ github.event.inputs.collections }}"
          collections_json=$(jq -nc --arg cols "${{ github.event.inputs.collections }}" '$cols | split(",")')
          echo "collections=$collections_json" >> $GITHUB_OUTPUT

  run-tests:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        collection: ${{ fromJson(needs.prepare-matrix.outputs.collections) }}
    outputs:
      public-dir: public
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Newman and Reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Run Collection
        run: |
          COLL=${{ matrix.collection }}
          echo "Running collection: $COLL"
          mkdir -p public/$COLL
          newman run "collections/${COLL}.json" \
            -r cli,htmlextra \
            --reporter-htmlextra-export "public/$COLL/index.html" --suppress-exit-code

      - name: Show public folder content
        run: |
          echo "Contents of public/"
          ls -R public

      - name: Upload collection artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.collection }}-report
          path: public/${{ matrix.collection }}

  collect-artifacts:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Download all collection artifacts
        uses: actions/download-artifact@v4
        with:
          path: public

      - name: Generate dynamic index.html
        run: |
          mkdir -p public
          echo '<!DOCTYPE html>
          <html lang="en">
          <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Test Reports</title>
          <style>
          body { font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif; background: #f9fafb; margin: 0; padding: 40px; }
          h1 { text-align: center; color: #111827; margin-bottom: 40px; }
          .grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; max-width: 1200px; margin: 0 auto; }
          .card { background: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); text-align: center; transition: transform 0.2s; }
          .card:hover { transform: translateY(-5px); }
          .card a { text-decoration: none; color: #2563eb; font-size: 18px; font-weight: 600; }
          </style>
          </head>
          <body>
          <h1>Test Reports</h1>
          <div class="grid">' > public/index.html

          for d in public/*/ ; do
          folder=$(basename "$d")
          # Beautify the folder name: replace "-" and "_" with space, capitalize words
          display_name=$(echo "$folder" | sed 's/[-_]/ /g' | awk '{for(i=1;i<=NF;i++){$i=toupper(substr($i,1,1)) substr($i,2)}}1')
          echo "        <div class=\"card\"><a href=\"$folder/index.html\">$display_name</a></div>" >> public/index.html
          done

          echo '      </div>
          </body>
          </html>' >> public/index.html


      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: collect-artifacts
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
